{"version":3,"file":"static/js/575.dd48e9b2.chunk.js","mappings":"+JAGA,MAAMA,E,OAAgBC,EAAMC,OAAO,CACjCC,QAAS,4BACTC,QAAS,CACP,eAAgB,sBAKpBJ,EAAcK,aAAaC,QAAQC,KAChCC,IACC,MAAMC,EAAQC,aAAaC,QAAQ,SAInC,OAHIF,IACFD,EAAOJ,QAAuB,cAAI,UAAUK,KAEvCD,CAAM,IAEdI,GACQC,QAAQC,OAAOF,KAK1BZ,EAAcK,aAAaU,SAASR,KACjCQ,GAAaA,IACbH,GAEQC,QAAQC,OAAOF,KAI1B,U,aC5BA,MA2CA,EA3CoBI,KAClB,MAAM,GAAEC,IAAOC,EAAAA,EAAAA,MACRC,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,OACtCT,EAAOU,IAAYD,EAAAA,EAAAA,UAAS,IAenC,OAbAE,EAAAA,EAAAA,YAAU,KACgBC,WACtB,IACE,MAAMT,QAAiBf,EAAcyB,IAAI,gBAAgBR,KACzDG,EAAcL,EAASW,KACzB,CAAE,MAAOC,GAAM,IAADC,EAAAC,EACZP,GAAqB,QAAZM,EAAAD,EAAIZ,gBAAQ,IAAAa,GAAM,QAANC,EAAZD,EAAcF,YAAI,IAAAG,OAAN,EAAZA,EAAoBC,UAAWH,EAAIG,QAC9C,GAGFC,EAAiB,GAChB,CAACd,IAEAL,GACKoB,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,UAAQrB,KAGfO,GAKHa,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAKd,EAAWgB,QAChBD,EAAAA,EAAAA,KAAA,KAAAD,SAAId,EAAWiB,OACfF,EAAAA,EAAAA,KAAA,OAAKG,IAAKlB,EAAWmB,MAAOC,IAAKpB,EAAWgB,QAC5CH,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAGM,KAAMrB,EAAWsB,YAAYC,UAAWC,OAAO,SAASC,IAAI,sBAAqBX,SAAC,eAGrFC,EAAAA,EAAAA,KAAA,KAAGM,KAAMrB,EAAWsB,YAAYI,QAASF,OAAO,SAASC,IAAI,sBAAqBX,SAAC,mBAZhFC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,eAgBJ,C","sources":["axiosConfig.js","pages/ProfilePage.js"],"sourcesContent":["// src/axiosConfig.js\r\nimport axios from 'axios';\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: 'http://localhost:5000/api',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Interceptor para añadir el token a las solicitudes\r\naxiosInstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Opcional: Interceptor para manejar errores globalmente\r\naxiosInstance.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    // Puedes manejar errores como tokens expirados aquí\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;\r\n","// src/pages/ProfilePage.jsx\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axiosInstance from '../axiosConfig';\r\n\r\nconst ProfilePage = () => {\r\n  const { id } = useParams();\r\n  const [influencer, setInfluencer] = useState(null);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchInfluencer = async () => {\r\n      try {\r\n        const response = await axiosInstance.get(`/influencers/${id}`);\r\n        setInfluencer(response.data);\r\n      } catch (err) {\r\n        setError(err.response?.data?.message || err.message);\r\n      }\r\n    };\r\n\r\n    fetchInfluencer();\r\n  }, [id]);\r\n\r\n  if (error) {\r\n    return <p>Error: {error}</p>;\r\n  }\r\n\r\n  if (!influencer) {\r\n    return <p>Cargando...</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>{influencer.name}</h2>\r\n      <p>{influencer.bio}</p>\r\n      <img src={influencer.image} alt={influencer.name} />\r\n      <div>\r\n        <a href={influencer.socialLinks.instagram} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          Instagram\r\n        </a>\r\n        <a href={influencer.socialLinks.twitter} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          Twitter\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n"],"names":["axiosInstance","axios","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","error","Promise","reject","response","ProfilePage","id","useParams","influencer","setInfluencer","useState","setError","useEffect","async","get","data","err","_err$response","_err$response$data","message","fetchInfluencer","_jsxs","children","_jsx","name","bio","src","image","alt","href","socialLinks","instagram","target","rel","twitter"],"sourceRoot":""}